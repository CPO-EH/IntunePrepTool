<File version="3.2">
  <FileID>88b68280-f08e-4d26-940c-4b7919cc86a5</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAF4qSURBVHhe7d33e9xYfib6/bfuT/Z97j6+3rXv
2Hft9e61Z+wZz0zPTM909/Sou6XultTKOScqR4o551BVjMWcc6hiLFYxk8qx+d7nPUVQ1WBRIouk
JJLv53m+D1jAwakDFAgcHBwA/+W/iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
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
iWOr3gbIZjpVbBUKxWaMVd8GyBaAiuY+FBQUake5iWOrPgiIlR5VbBUKxWYMqwUg4gcBcabyRg9y
c/PMtVJmyFpF6DA07NOWGq5knpWkjWSelaSNZJ6VpI1knpWkXWoeVgDYCcV6d/bb0i5nuJJ5VpI2
knnCpWVllr1p2QrAv5czz1LDlaSNZJ6VpI1knpWkjWSelaSNZJ6VpI1knpWkjWSelaSNZJ6VpI1k
npWkjWSelaSNZJ6VpI1knpWkjWSet6Xlg4LYArCqlwGV822AGRkY6O+D19NrMuSQvQtZu+jt6UJv
T7f5m+NMmu5gGistP1vTg/N0m/l+Mo+VVvm/9/z520ZduoiO9raFPNYy//Uu/0rzHxzoR052FpIS
E+Af8a15/utd/vXNv2dRWuWv/O3zKP+PP39+7mhrQWauI8IWAP8T1LQPITWrANFxKeatQnyxQE5h
ibmukJHrREJqNpLSc5GWVYDYpAzz7mHWOPKcpbgXl2yG/MyOCJzOdEzP+Tg/82F+zFf5f5j82UR0
+cY9M1yP/Ne7/CvNn9PScxy4djsG+a7yNc9/vcu/FvnHJKYhM2z+RfNplb/yV/4bO/8UZOQ6EJ9e
AO/Y85VXADqHH6B75JFpPmCwT0DokLWK0OgNLE7zZhicvmiesGmV//vOnxuHSbNO+YcbLkr7nvLv
CQS3Z+/4i3XJP1xa5a/87cNFaZW/8rfPEzbt8vPneM/Yc3QMzS6/AnD85Jn82VcwMygUCoVCodjY
4X8E1LX2vrsC8N33O0tbu/pRWddmagwKhUKhUCg2btS39iI7z/nuCoCIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIjIR+T/B1p/4QZtMBj+AAAAAElFTkSuQmCC</Preview>
  <Form>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
yb4AAA==</Form>
  <Code><![CDATA[
$BuildingBlocksFilesAndFolders_Load= {
	#TODO: Initialize Form Controls here
	#region Set DPI Awareness
	Set-ControlTheme -Control $BuildingBlocksFilesAndFolders -Theme Dark
}

#region Control Helper Functions
function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]
		$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ComboBox.DisplayMember = $DisplayMember
	}
	
	if ($ValueMember)
	{
		$ComboBox.ValueMember = $ValueMember
	}
}


#endregion

$file_folder_cancel_buttonAdd_Click={
	#TODO: Place custom script here
	
}

$file_loadFolder_button2_Click={
	#TODO: Place custom script here
	if (($user_folder_context_system_radiobutton1.Checked -eq $false) -and ($user_folder_context_user_radiobutton1.Checked -eq $false))
	{
		#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
		[void][System.Windows.Forms.MessageBox]::Show("Select user or system context first; Then try again", 'Select user or system context first') # Casting the method to [void] suppresses the output. 
	}
	else
	{
		$file_folderbrowsermoderndialog2.ShowDialog()
		$file_selected_source_folder_textbox3.Text = $file_folderbrowsermoderndialog2.SelectedPath
		$file_folder_destination_textbox3.Text = $file_folderbrowsermoderndialog2.SelectedPath
		$user_folder_fileorfolder_label1.Text = 'Folder'
	}
}

$file_loadFile_button2_Click={
	#TODO: Place custom script here
	if (($user_folder_context_system_radiobutton1.Checked -eq $false) -and ($user_folder_context_user_radiobutton1.Checked -eq $false))
	{
		#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
		[void][System.Windows.Forms.MessageBox]::Show("Select user or system context first; Then try again", 'Select user or system context first') # Casting the method to [void] suppresses the output. 
	}
	else
	{
		$file_file_openfiledialog1.ShowDialog()
		$file_selected_source_folder_textbox3.Text = $file_file_openfiledialog1.FileNames
		$file_folder_destination_textbox3.Text = $file_file_openfiledialog1.FileNames
		$user_folder_fileorfolder_label1.Text = 'File'
	}
}

$file_folder_add_button2_Click= {
	#TODO: Place custom script here
	if ($file_folder_skip_checkbox1.Checked -eq $true)
	{
		$file_folder_SKIP = $true
	}
	if ($file_folder_skip_checkbox1.Checked -eq $FALSE)
	{
		$file_folder_SKIP = $false
	}
	
	if ($file_folder_overwrite_checkbox1.Checked -eq $true)
	{
		$file_folder_overwrite = $true
	}
	if ($file_folder_overwrite_checkbox1.Checked -eq $FALSE)
	{
		$file_folder_overwrite = $false
	}
	if ($file_folder_add_uninstall_checkboxOverwrite.Checked -eq $true)
	{
		$file_folder_remove_unsinstall = $true
	}
	if ($file_folder_add_uninstall_checkboxOverwrite.Checked -eq $false)
	{
		$file_folder_remove_unsinstall = $false
	}
	
	
	$row = $BuildingBlocksTable.NewRow();
	if ($user_folder_context_user_radiobutton1.Checked -eq $true)
	{
		$row["Context"] = 'user';
	}
	if ($user_folder_context_system_radiobutton1.Checked -eq $true)
	{
		$row["Context"] = 'system';
	}
	if ($user_folder_fileorfolder_label1.Text -like 'folder')
	{
		$row["Sort"] = 'folder';
	}
	else
	{
		$row["Sort"] = 'file';
	}
	
	
	$row["Source"] = $file_selected_source_folder_textbox3.text;
	$row["Destination"] = $file_folder_destination_textbox3.Text;
	$row["Skip"] = $file_folder_SKIP;
	$row["Overwrite"] = $file_folder_overwrite;
	$row["Uninstall"] = $file_folder_remove_unsinstall;
	$BuildingBlocksTable.Rows.Add($row);
	$BuildingBlocksTable.AcceptChanges();
	
}

$user_folder_context_user_radiobutton1_CheckedChanged={
	#TODO: Place custom script here
	if ($user_folder_context_user_radiobutton1.Checked -eq $false)
	{
		$file_folder_user_var_options_combobox1.Enabled = $false
		$file_folder_user_var_options_combobox1.Visible = $false
		$file_loadVARS_button2.Enabled = $false
		$file_loadVARS_button2.Visible = $false
		
		
	}
	if ($user_folder_context_user_radiobutton1.Checked -eq $true)
	{
		$file_folder_user_var_options_combobox1.Enabled = $true
		$file_folder_user_var_options_combobox1.Visible = $true
		$file_loadVARS_button2.Enabled = $true
		$file_loadVARS_button2.Visible = $true
		
	}
}

$file_loadVARS_button2_Click={
	#TODO: Place custom script here
	$var = $file_folder_user_var_options_combobox1.Text
	$file_folder_destination_textbox3.Text = $var
}

$file_folder_user_var_options_combobox1_SelectedIndexChanged={
	#TODO: Place custom script here
	
}

$user_folder_context_system_radiobutton1_CheckedChanged={
	#TODO: Place custom script here
	if ($user_folder_context_system_radiobutton1.Checked -eq $false)
	{
		$file_folder_user_var_options_combobox1.Enabled = $true
		$file_folder_user_var_options_combobox1.Visible = $true
		$file_loadVARS_button2.Enabled = $true
		$file_loadVARS_button2.Visible = $true
		
		
	}
	if ($user_folder_context_system_radiobutton1.Checked -eq $true)
	{
		$file_folder_user_var_options_combobox1.Enabled = $false
		$file_folder_user_var_options_combobox1.Visible = $false
		$file_loadVARS_button2.Enabled = $false
		$file_loadVARS_button2.Visible = $false
		
		
	}
}

$file_folder_Accept_buttonAdd_Click={
	#TODO: Place custom script here
	
}

$formTheme_Load={
	#Set the theme to Dark
	Set-ControlTheme $BuildingBlocksFilesAndFolders -Theme Dark
}
#Append the event to the form
$BuildingBlocksFilesAndFolders.add_Load($formTheme_Load)


$darkToolStripMenuItem_Click={
	#TODO: Place custom script here
	Set-ControlTheme -Control $BuildingBlocksFilesAndFolders -Theme Dark
}

$lightToolStripMenuItem_Click={
	Set-ControlTheme -Control $BuildingBlocksFilesAndFolders -Theme Light
}

#region Control Theme Helper Function
<#
	.SYNOPSIS
		Applies a theme to the control and its children.
	
	.PARAMETER Control
		The control to theme. Usually the form itself.
	
	.PARAMETER Theme
		The color theme:
		Light
		Dark

	.PARAMETER CustomColor
		A hashtable that contains the color values.
		Keys:
		WindowColor
		ContainerColor
		BackColor
		ForeColor
		BorderColor
		SelectionForeColor
		SelectionBackColor
		MenuSelectionColor
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -Theme Dark
	
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -CustomColor @{ WindowColor = 'White'; ContainerBackColor = 'Gray'; BackColor... }
	.NOTES
		Created by SAPIEN Technologies, Inc.
#>
function Set-ControlTheme
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.ComponentModel.Component]$Control,
		[ValidateSet('Light', 'Dark')]
		[string]$Theme = 'Dark',
		[System.Collections.Hashtable]$CustomColor
	)
	
	$Font = [System.Drawing.Font]::New('Segoe UI', 9)
	
	#Initialize the colors
	if ($Theme -eq 'Dark')
	{
		$WindowColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ContainerColor = [System.Drawing.Color]::FromArgb(45, 45, 45)
		$BackColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ForeColor = [System.Drawing.Color]::White
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::DimGray
	}
	else
	{
		$WindowColor = [System.Drawing.Color]::White
		$ContainerColor = [System.Drawing.Color]::WhiteSmoke
		$BackColor = [System.Drawing.Color]::Gainsboro
		$ForeColor = [System.Drawing.Color]::Black
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::LightSteelBlue
	}
	
	if ($CustomColor)
	{
		#Check and Validate the custom colors:
		$Color = $CustomColor.WindowColor -as [System.Drawing.Color]
		if ($Color) { $WindowColor = $Color }
		$Color = $CustomColor.ContainerColor -as [System.Drawing.Color]
		if ($Color) { $ContainerColor = $Color }
		$Color = $CustomColor.BackColor -as [System.Drawing.Color]
		if ($Color) { $BackColor = $Color }
		$Color = $CustomColor.ForeColor -as [System.Drawing.Color]
		if ($Color) { $ForeColor = $Color }
		$Color = $CustomColor.BorderColor -as [System.Drawing.Color]
		if ($Color) { $BorderColor = $Color }
		$Color = $CustomColor.SelectionBackColor -as [System.Drawing.Color]
		if ($Color) { $SelectionBackColor = $Color }
		$Color = $CustomColor.SelectionForeColor -as [System.Drawing.Color]
		if ($Color) { $SelectionForeColor = $Color }
		$Color = $CustomColor.MenuSelectionColor -as [System.Drawing.Color]
		if ($Color) { $MenuSelectionColor = $Color }
	}
	
	#Define the custom renderer for the menus
	#region Add-Type definition
	try
	{
		[SAPIENTypes.SAPIENColorTable] | Out-Null
	}
	catch
	{
		if ($PSVersionTable.PSVersion.Major -ge 7)
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing', 'System.Drawing.Primitives'
		}
		else
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing'
		}
		Add-Type -ReferencedAssemblies $Assemblies -TypeDefinition "
using System;
using System.Windows.Forms;
using System.Drawing;
namespace SAPIENTypes
{
    public class SAPIENColorTable : ProfessionalColorTable
    {
        Color ContainerBackColor;
        Color BackColor;
        Color BorderColor;
		Color SelectBackColor;

        public SAPIENColorTable(Color containerColor, Color backColor, Color borderColor, Color selectBackColor)
        {
            ContainerBackColor = containerColor;
            BackColor = backColor;
            BorderColor = borderColor;
			SelectBackColor = selectBackColor;
        } 
		public override Color MenuStripGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuStripGradientEnd { get { return ContainerBackColor; } }
        public override Color ToolStripBorder { get { return BorderColor; } }
        public override Color MenuItemBorder { get { return SelectBackColor; } }
        public override Color MenuItemSelected { get { return SelectBackColor; } }
        public override Color SeparatorDark { get { return BorderColor; } }
        public override Color ToolStripDropDownBackground { get { return BackColor; } }
        public override Color MenuBorder { get { return BorderColor; } }
        public override Color MenuItemSelectedGradientBegin { get { return SelectBackColor; } }
        public override Color MenuItemSelectedGradientEnd { get { return SelectBackColor; } }      
        public override Color MenuItemPressedGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientEnd { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientMiddle { get { return ContainerBackColor; } }
        public override Color ImageMarginGradientBegin { get { return BackColor; } }
        public override Color ImageMarginGradientEnd { get { return BackColor; } }
        public override Color ImageMarginGradientMiddle { get { return BackColor; } }
    }
}"
	}
	#endregion
	
	$colorTable = New-Object SAPIENTypes.SAPIENColorTable -ArgumentList $ContainerColor, $BackColor, $BorderColor, $MenuSelectionColor
	$render = New-Object System.Windows.Forms.ToolStripProfessionalRenderer -ArgumentList $colorTable
	[System.Windows.Forms.ToolStripManager]::Renderer = $render
	
	#Set up our processing queue
	$Queue = New-Object System.Collections.Generic.Queue[System.ComponentModel.Component]
	$Queue.Enqueue($Control)
	
	Add-Type -AssemblyName System.Core
	
	#Only process the controls once.
	$Processed = New-Object System.Collections.Generic.HashSet[System.ComponentModel.Component]
	
	#Apply the colors to the controls
	while ($Queue.Count -gt 0)
	{
		$target = $Queue.Dequeue()
		
		#Skip controls we already processed
		if ($Processed.Contains($target)) { continue }
		$Processed.Add($target)
		
		#Set the text color
		$target.ForeColor = $ForeColor
		
		#region Handle Controls
		if ($target -is [System.Windows.Forms.Form])
		{
			#Set Font
			$target.Font = $Font
			$target.BackColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.SplitContainer])
		{
			$target.BackColor = $BorderColor
		}
		elseif ($target -is [System.Windows.Forms.PropertyGrid])
		{
			$target.BackColor = $BorderColor
			$target.ViewBackColor = $BackColor
			$target.ViewForeColor = $ForeColor
			$target.ViewBorderColor = $BorderColor
			$target.CategoryForeColor = $ForeColor
			$target.CategorySplitterColor = $ContainerColor
			$target.HelpBackColor = $BackColor
			$target.HelpForeColor = $ForeColor
			$target.HelpBorderColor = $BorderColor
			$target.CommandsBackColor = $BackColor
			$target.CommandsBorderColor = $BorderColor
			$target.CommandsForeColor = $ForeColor
			$target.LineColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.ContainerControl] -or
			$target -is [System.Windows.Forms.Panel])
		{
			#Set the BackColor for the container
			$target.BackColor = $ContainerColor
			
		}
		elseif ($target -is [System.Windows.Forms.GroupBox])
		{
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.Button])
		{
			$target.FlatStyle = 'Flat'
			$target.FlatAppearance.BorderColor = $BorderColor
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.CheckBox] -or
			$target -is [System.Windows.Forms.RadioButton] -or
			$target -is [System.Windows.Forms.Label])
		{
			#$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.ComboBox])
		{
			$target.BackColor = $BackColor
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.TextBox])
		{
			$target.BorderStyle = 'FixedSingle'
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.DataGridView])
		{
			$target.GridColor = $BorderColor
			$target.BackgroundColor = $ContainerColor
			$target.DefaultCellStyle.BackColor = $WindowColor
			$target.DefaultCellStyle.SelectionBackColor = $SelectionBackColor
			$target.DefaultCellStyle.SelectionForeColor = $SelectionForeColor
			$target.ColumnHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.ColumnHeadersDefaultCellStyle.ForeColor = $ForeColor
			$target.EnableHeadersVisualStyles = $false
			$target.ColumnHeadersBorderStyle = 'Single'
			$target.RowHeadersBorderStyle = 'Single'
			$target.RowHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.RowHeadersDefaultCellStyle.ForeColor = $ForeColor
			
		}
		elseif ($PSVersionTable.PSVersion.Major -le 5 -and $target -is [System.Windows.Forms.DataGrid])
		{
			$target.CaptionBackColor = $WindowColor
			$target.CaptionForeColor = $ForeColor
			$target.BackgroundColor = $ContainerColor
			$target.BackColor = $WindowColor
			$target.ForeColor = $ForeColor
			$target.HeaderBackColor = $ContainerColor
			$target.HeaderForeColor = $ForeColor
			$target.FlatMode = $true
			$target.BorderStyle = 'FixedSingle'
			$target.GridLineColor = $BorderColor
			$target.AlternatingBackColor = $ContainerColor
			$target.SelectionBackColor = $SelectionBackColor
			$target.SelectionForeColor = $SelectionForeColor
		}
		elseif ($target -is [System.Windows.Forms.ToolStrip])
		{
			
			$target.BackColor = $BackColor
			$target.Renderer = $render
			
			foreach ($item in $target.Items)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ToolStripMenuItem] -or
			$target -is [System.Windows.Forms.ToolStripDropDown] -or
			$target -is [System.Windows.Forms.ToolStripDropDownItem])
		{
			$target.BackColor = $BackColor
			foreach ($item in $target.DropDownItems)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ListBox] -or
			$target -is [System.Windows.Forms.ListView] -or
			$target -is [System.Windows.Forms.TreeView])
		{
			$target.BackColor = $WindowColor
		}
		else
		{
			$target.BackColor = $BackColor
		}
		#endregion
		
		if ($target -is [System.Windows.Forms.Control])
		{
			#Queue all the child controls
			foreach ($child in $target.Controls)
			{
				$Queue.Enqueue($child)
			}
			if ($target.ContextMenuStrip)
			{
				$Queue.Enqueue($target.ContextMenuStrip);
			}
		}
	}
}
#endregion
]]></Code>
  <TV>0</TV>
  <Mode>0</Mode>
  <Assemblies />
</File>